#!/usr/bin/php
<?php

const JSON_VALIDATE = "VALIDATE_JSON";
$checks = array();

$check = new stdClass();
$check->name = "AWS Secret";
$check->regex = '/(?<![A-Za-z0-9\/+=])[A-Za-z0-9\/+=]{40}(?![A-Za-z0-9\/+=])/';
$checks[] = $check;

$check->name = JSON_VALIDATE;
$checks[] = $check;

$changes = getChangedFile();
$error = null;

if(!is_null($changes)) {
    foreach($changes as $change) {
        $content = file_get_contents($change);
        if(strlen($content)) {
            foreach($checks as $check) {
                if(property_exists($check, "regex") and strlen($check->regex)) {
                    preg_match($check->regex, $content, $matches);
                    if(count($matches)) {
                        $error = "Found suspected " .$check->name." " . $matches[0] . " in file:$change";
                    }
                }
                if(property_exists($check, "name") and $check->name==JSON_VALIDATE) {
                    $ext = pathinfo($change, PATHINFO_EXTENSION);
                    if(strtolower($ext)=="json") {
                        if(!isJson($content)) {
                            $error = "Invalid JSON found in file: $change ";
                        }
                    }
                }
            }

        }
    }
}

if(!is_null($error)) {
    echo $error;
    echo "If you are 100% confident that these changes are safe, then you can circumvent this check by committing from the command line using the  --no-verify  flag:\n\tgit commit --no-verify";
    echo PHP_EOL;
    exit(1);
}

exit(0);

function getChangedFile() {
  $cmd = "git diff --staged --name-only | tr '\n' ' '";
  $res = exec($cmd);
  if(strlen($res)>0) {
    $res = explode(" ", $res);
  }
  else {
    $res = null;
  }
  return($res);
}

function isJson($string) {
    json_decode($string);
    return (json_last_error() == JSON_ERROR_NONE);
}


?>